
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000450  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000082  00800100  00800100  000004c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000534  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cd3  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000866  00000000  00000000  0000128f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000657  00000000  00000000  00001af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  0000214c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a5  00000000  00000000  0000229c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000779  00000000  00000000  00002741  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002eba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 17 01 	jmp	0x22e	; 0x22e <__vector_18>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 38       	cpi	r26, 0x82	; 130
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 df 00 	call	0x1be	; 0x1be <main>
  88:	0c 94 26 02 	jmp	0x44c	; 0x44c <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <USART_setup>:
	else if ((room > set) && (room > vent))		// Room too hot, vent colder, open vent to cool
	{
		Turn_On_Motor(OPEN);
	}
	else if ((set < room) && (vent > room)){		// Room too hot, vent hotter, don't heat
		Turn_On_Motor(CLOSE);
  90:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  94:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  98:	82 e2       	ldi	r24, 0x22	; 34
  9a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
  9e:	88 e9       	ldi	r24, 0x98	; 152
  a0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  a4:	8e e0       	ldi	r24, 0x0E	; 14
  a6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  aa:	08 95       	ret

000000ac <TransmitFloat>:
  ac:	0f 93       	push	r16
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	00 d0       	rcall	.+0      	; 0xb6 <TransmitFloat+0xa>
  b6:	00 d0       	rcall	.+0      	; 0xb8 <TransmitFloat+0xc>
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
  bc:	0e 94 a6 01 	call	0x34c	; 0x34c <__fixunssfsi>
  c0:	06 ec       	ldi	r16, 0xC6	; 198
  c2:	10 e0       	ldi	r17, 0x00	; 0
  c4:	f8 01       	movw	r30, r16
  c6:	60 83       	st	Z, r22
  c8:	69 89       	ldd	r22, Y+17	; 0x11
  ca:	7a 89       	ldd	r23, Y+18	; 0x12
  cc:	8b 89       	ldd	r24, Y+19	; 0x13
  ce:	9c 89       	ldd	r25, Y+20	; 0x14
  d0:	0e 94 a6 01 	call	0x34c	; 0x34c <__fixunssfsi>
  d4:	f8 01       	movw	r30, r16
  d6:	60 83       	st	Z, r22
  d8:	0f 90       	pop	r0
  da:	0f 90       	pop	r0
  dc:	0f 90       	pop	r0
  de:	0f 90       	pop	r0
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	1f 91       	pop	r17
  e6:	0f 91       	pop	r16
  e8:	08 95       	ret

000000ea <getChar>:
  ea:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <rxReadPos>
  ee:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  f2:	98 17       	cp	r25, r24
  f4:	69 f0       	breq	.+26     	; 0x110 <getChar+0x26>
  f6:	e9 2f       	mov	r30, r25
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	ee 5f       	subi	r30, 0xFE	; 254
  fc:	fe 4f       	sbci	r31, 0xFE	; 254
  fe:	80 81       	ld	r24, Z
 100:	9f 5f       	subi	r25, 0xFF	; 255
 102:	1a f0       	brmi	.+6      	; 0x10a <getChar+0x20>
 104:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <rxReadPos>
 108:	08 95       	ret
 10a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <rxReadPos>
 10e:	08 95       	ret
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	08 95       	ret

00000114 <Motor_Setup>:
 114:	39 9a       	sbi	0x07, 1	; 7
 116:	3a 9a       	sbi	0x07, 2	; 7
 118:	3b 9a       	sbi	0x07, 3	; 7
 11a:	3c 9a       	sbi	0x07, 4	; 7
 11c:	3d 9a       	sbi	0x07, 5	; 7
 11e:	08 95       	ret

00000120 <Turn_On_Motor>:
 120:	81 30       	cpi	r24, 0x01	; 1
 122:	91 05       	cpc	r25, r1
 124:	29 f5       	brne	.+74     	; 0x170 <Turn_On_Motor+0x50>
 126:	8d e7       	ldi	r24, 0x7D	; 125
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	41 9a       	sbi	0x08, 1	; 8
 12c:	e1 ee       	ldi	r30, 0xE1	; 225
 12e:	f4 e0       	ldi	r31, 0x04	; 4
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <Turn_On_Motor+0x10>
 134:	00 c0       	rjmp	.+0      	; 0x136 <Turn_On_Motor+0x16>
 136:	00 00       	nop
 138:	41 98       	cbi	0x08, 1	; 8
 13a:	42 9a       	sbi	0x08, 2	; 8
 13c:	e1 ee       	ldi	r30, 0xE1	; 225
 13e:	f4 e0       	ldi	r31, 0x04	; 4
 140:	31 97       	sbiw	r30, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <Turn_On_Motor+0x20>
 144:	00 c0       	rjmp	.+0      	; 0x146 <Turn_On_Motor+0x26>
 146:	00 00       	nop
 148:	42 98       	cbi	0x08, 2	; 8
 14a:	43 9a       	sbi	0x08, 3	; 8
 14c:	e1 ee       	ldi	r30, 0xE1	; 225
 14e:	f4 e0       	ldi	r31, 0x04	; 4
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <Turn_On_Motor+0x30>
 154:	00 c0       	rjmp	.+0      	; 0x156 <Turn_On_Motor+0x36>
 156:	00 00       	nop
 158:	43 98       	cbi	0x08, 3	; 8
 15a:	44 9a       	sbi	0x08, 4	; 8
 15c:	e1 ee       	ldi	r30, 0xE1	; 225
 15e:	f4 e0       	ldi	r31, 0x04	; 4
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <Turn_On_Motor+0x40>
 164:	00 c0       	rjmp	.+0      	; 0x166 <Turn_On_Motor+0x46>
 166:	00 00       	nop
 168:	44 98       	cbi	0x08, 4	; 8
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f6       	brne	.-68     	; 0x12a <Turn_On_Motor+0xa>
 16e:	08 95       	ret
 170:	02 97       	sbiw	r24, 0x02	; 2
 172:	21 f5       	brne	.+72     	; 0x1bc <Turn_On_Motor+0x9c>
 174:	8d e7       	ldi	r24, 0x7D	; 125
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	44 9a       	sbi	0x08, 4	; 8
 17a:	e1 ee       	ldi	r30, 0xE1	; 225
 17c:	f4 e0       	ldi	r31, 0x04	; 4
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <Turn_On_Motor+0x5e>
 182:	00 c0       	rjmp	.+0      	; 0x184 <Turn_On_Motor+0x64>
 184:	00 00       	nop
 186:	44 98       	cbi	0x08, 4	; 8
 188:	43 9a       	sbi	0x08, 3	; 8
 18a:	e1 ee       	ldi	r30, 0xE1	; 225
 18c:	f4 e0       	ldi	r31, 0x04	; 4
 18e:	31 97       	sbiw	r30, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <Turn_On_Motor+0x6e>
 192:	00 c0       	rjmp	.+0      	; 0x194 <Turn_On_Motor+0x74>
 194:	00 00       	nop
 196:	43 98       	cbi	0x08, 3	; 8
 198:	42 9a       	sbi	0x08, 2	; 8
 19a:	e1 ee       	ldi	r30, 0xE1	; 225
 19c:	f4 e0       	ldi	r31, 0x04	; 4
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <Turn_On_Motor+0x7e>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <Turn_On_Motor+0x84>
 1a4:	00 00       	nop
 1a6:	42 98       	cbi	0x08, 2	; 8
 1a8:	41 9a       	sbi	0x08, 1	; 8
 1aa:	e1 ee       	ldi	r30, 0xE1	; 225
 1ac:	f4 e0       	ldi	r31, 0x04	; 4
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <Turn_On_Motor+0x8e>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <Turn_On_Motor+0x94>
 1b4:	00 00       	nop
 1b6:	41 98       	cbi	0x08, 1	; 8
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f6       	brne	.-68     	; 0x178 <Turn_On_Motor+0x58>
 1bc:	08 95       	ret

000001be <main>:


int main(void)
{
	char currentState = 'o';
	sei();
 1be:	78 94       	sei
	
	USART_setup(MYUBRR);
 1c0:	8c e0       	ldi	r24, 0x0C	; 12
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 48 00 	call	0x90	; 0x90 <USART_setup>
	Motor_Setup();
 1c8:	0e 94 8a 00 	call	0x114	; 0x114 <Motor_Setup>
		
	
	
	char input;
	
	float i = 1.1;
 1cc:	0f 2e       	mov	r0, r31
 1ce:	fd ec       	ldi	r31, 0xCD	; 205
 1d0:	cf 2e       	mov	r12, r31
 1d2:	fc ec       	ldi	r31, 0xCC	; 204
 1d4:	df 2e       	mov	r13, r31
 1d6:	fc e8       	ldi	r31, 0x8C	; 140
 1d8:	ef 2e       	mov	r14, r31
 1da:	ff e3       	ldi	r31, 0x3F	; 63
 1dc:	ff 2e       	mov	r15, r31
 1de:	f0 2d       	mov	r31, r0
	while(1){
		TransmitFloat(i);
 1e0:	c7 01       	movw	r24, r14
 1e2:	b6 01       	movw	r22, r12
 1e4:	0e 94 56 00 	call	0xac	; 0xac <TransmitFloat>
		i = i + 0.1;
 1e8:	2d ec       	ldi	r18, 0xCD	; 205
 1ea:	3c ec       	ldi	r19, 0xCC	; 204
 1ec:	4c ec       	ldi	r20, 0xCC	; 204
 1ee:	5d e3       	ldi	r21, 0x3D	; 61
 1f0:	c7 01       	movw	r24, r14
 1f2:	b6 01       	movw	r22, r12
 1f4:	0e 94 3a 01 	call	0x274	; 0x274 <__addsf3>
 1f8:	6b 01       	movw	r12, r22
 1fa:	7c 01       	movw	r14, r24
		
		
		
		input = getChar();
 1fc:	0e 94 75 00 	call	0xea	; 0xea <getChar>
		
		
		
		if (input == 'o'){
 200:	8f 36       	cpi	r24, 0x6F	; 111
 202:	29 f4       	brne	.+10     	; 0x20e <main+0x50>
			Turn_On_Motor(OPEN);
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 90 00 	call	0x120	; 0x120 <Turn_On_Motor>
 20c:	06 c0       	rjmp	.+12     	; 0x21a <main+0x5c>
		}
		if (input == 'c') {
 20e:	83 36       	cpi	r24, 0x63	; 99
 210:	21 f4       	brne	.+8      	; 0x21a <main+0x5c>
			Turn_On_Motor(CLOSE);
 212:	82 e0       	ldi	r24, 0x02	; 2
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 90 00 	call	0x120	; 0x120 <Turn_On_Motor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21a:	2f e3       	ldi	r18, 0x3F	; 63
 21c:	8d e0       	ldi	r24, 0x0D	; 13
 21e:	93 e0       	ldi	r25, 0x03	; 3
 220:	21 50       	subi	r18, 0x01	; 1
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <main+0x62>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x6c>
 22a:	00 00       	nop
 22c:	d9 cf       	rjmp	.-78     	; 0x1e0 <main+0x22>

0000022e <__vector_18>:
	



ISR(USART_RX_vect)
{
 22e:	1f 92       	push	r1
 230:	0f 92       	push	r0
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	0f 92       	push	r0
 236:	11 24       	eor	r1, r1
 238:	8f 93       	push	r24
 23a:	9f 93       	push	r25
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31
	rxBuffer[rxWritePos] = UDR0;
 240:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 244:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 248:	e8 2f       	mov	r30, r24
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	ee 5f       	subi	r30, 0xFE	; 254
 24e:	fe 4f       	sbci	r31, 0xFE	; 254
 250:	90 83       	st	Z, r25
	rxWritePos++;
 252:	8f 5f       	subi	r24, 0xFF	; 255
	if (rxWritePos >= RX_BUFFER_SIZE)
 254:	1a f0       	brmi	.+6      	; 0x25c <__vector_18+0x2e>


ISR(USART_RX_vect)
{
	rxBuffer[rxWritePos] = UDR0;
	rxWritePos++;
 256:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 25a:	02 c0       	rjmp	.+4      	; 0x260 <__vector_18+0x32>
	if (rxWritePos >= RX_BUFFER_SIZE)
	{
		rxWritePos = 0;
 25c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	}
}
 260:	ff 91       	pop	r31
 262:	ef 91       	pop	r30
 264:	9f 91       	pop	r25
 266:	8f 91       	pop	r24
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

00000272 <__subsf3>:
 272:	50 58       	subi	r21, 0x80	; 128

00000274 <__addsf3>:
 274:	bb 27       	eor	r27, r27
 276:	aa 27       	eor	r26, r26
 278:	0e 94 51 01 	call	0x2a2	; 0x2a2 <__addsf3x>
 27c:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__fp_round>
 280:	0e 94 de 01 	call	0x3bc	; 0x3bc <__fp_pscA>
 284:	38 f0       	brcs	.+14     	; 0x294 <__addsf3+0x20>
 286:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__fp_pscB>
 28a:	20 f0       	brcs	.+8      	; 0x294 <__addsf3+0x20>
 28c:	39 f4       	brne	.+14     	; 0x29c <__addsf3+0x28>
 28e:	9f 3f       	cpi	r25, 0xFF	; 255
 290:	19 f4       	brne	.+6      	; 0x298 <__addsf3+0x24>
 292:	26 f4       	brtc	.+8      	; 0x29c <__addsf3+0x28>
 294:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_nan>
 298:	0e f4       	brtc	.+2      	; 0x29c <__addsf3+0x28>
 29a:	e0 95       	com	r30
 29c:	e7 fb       	bst	r30, 7
 29e:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_inf>

000002a2 <__addsf3x>:
 2a2:	e9 2f       	mov	r30, r25
 2a4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__fp_split3>
 2a8:	58 f3       	brcs	.-42     	; 0x280 <__addsf3+0xc>
 2aa:	ba 17       	cp	r27, r26
 2ac:	62 07       	cpc	r22, r18
 2ae:	73 07       	cpc	r23, r19
 2b0:	84 07       	cpc	r24, r20
 2b2:	95 07       	cpc	r25, r21
 2b4:	20 f0       	brcs	.+8      	; 0x2be <__addsf3x+0x1c>
 2b6:	79 f4       	brne	.+30     	; 0x2d6 <__addsf3x+0x34>
 2b8:	a6 f5       	brtc	.+104    	; 0x322 <__addsf3x+0x80>
 2ba:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_zero>
 2be:	0e f4       	brtc	.+2      	; 0x2c2 <__addsf3x+0x20>
 2c0:	e0 95       	com	r30
 2c2:	0b 2e       	mov	r0, r27
 2c4:	ba 2f       	mov	r27, r26
 2c6:	a0 2d       	mov	r26, r0
 2c8:	0b 01       	movw	r0, r22
 2ca:	b9 01       	movw	r22, r18
 2cc:	90 01       	movw	r18, r0
 2ce:	0c 01       	movw	r0, r24
 2d0:	ca 01       	movw	r24, r20
 2d2:	a0 01       	movw	r20, r0
 2d4:	11 24       	eor	r1, r1
 2d6:	ff 27       	eor	r31, r31
 2d8:	59 1b       	sub	r21, r25
 2da:	99 f0       	breq	.+38     	; 0x302 <__addsf3x+0x60>
 2dc:	59 3f       	cpi	r21, 0xF9	; 249
 2de:	50 f4       	brcc	.+20     	; 0x2f4 <__addsf3x+0x52>
 2e0:	50 3e       	cpi	r21, 0xE0	; 224
 2e2:	68 f1       	brcs	.+90     	; 0x33e <__addsf3x+0x9c>
 2e4:	1a 16       	cp	r1, r26
 2e6:	f0 40       	sbci	r31, 0x00	; 0
 2e8:	a2 2f       	mov	r26, r18
 2ea:	23 2f       	mov	r18, r19
 2ec:	34 2f       	mov	r19, r20
 2ee:	44 27       	eor	r20, r20
 2f0:	58 5f       	subi	r21, 0xF8	; 248
 2f2:	f3 cf       	rjmp	.-26     	; 0x2da <__addsf3x+0x38>
 2f4:	46 95       	lsr	r20
 2f6:	37 95       	ror	r19
 2f8:	27 95       	ror	r18
 2fa:	a7 95       	ror	r26
 2fc:	f0 40       	sbci	r31, 0x00	; 0
 2fe:	53 95       	inc	r21
 300:	c9 f7       	brne	.-14     	; 0x2f4 <__addsf3x+0x52>
 302:	7e f4       	brtc	.+30     	; 0x322 <__addsf3x+0x80>
 304:	1f 16       	cp	r1, r31
 306:	ba 0b       	sbc	r27, r26
 308:	62 0b       	sbc	r22, r18
 30a:	73 0b       	sbc	r23, r19
 30c:	84 0b       	sbc	r24, r20
 30e:	ba f0       	brmi	.+46     	; 0x33e <__addsf3x+0x9c>
 310:	91 50       	subi	r25, 0x01	; 1
 312:	a1 f0       	breq	.+40     	; 0x33c <__addsf3x+0x9a>
 314:	ff 0f       	add	r31, r31
 316:	bb 1f       	adc	r27, r27
 318:	66 1f       	adc	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	88 1f       	adc	r24, r24
 31e:	c2 f7       	brpl	.-16     	; 0x310 <__addsf3x+0x6e>
 320:	0e c0       	rjmp	.+28     	; 0x33e <__addsf3x+0x9c>
 322:	ba 0f       	add	r27, r26
 324:	62 1f       	adc	r22, r18
 326:	73 1f       	adc	r23, r19
 328:	84 1f       	adc	r24, r20
 32a:	48 f4       	brcc	.+18     	; 0x33e <__addsf3x+0x9c>
 32c:	87 95       	ror	r24
 32e:	77 95       	ror	r23
 330:	67 95       	ror	r22
 332:	b7 95       	ror	r27
 334:	f7 95       	ror	r31
 336:	9e 3f       	cpi	r25, 0xFE	; 254
 338:	08 f0       	brcs	.+2      	; 0x33c <__addsf3x+0x9a>
 33a:	b0 cf       	rjmp	.-160    	; 0x29c <__addsf3+0x28>
 33c:	93 95       	inc	r25
 33e:	88 0f       	add	r24, r24
 340:	08 f0       	brcs	.+2      	; 0x344 <__addsf3x+0xa2>
 342:	99 27       	eor	r25, r25
 344:	ee 0f       	add	r30, r30
 346:	97 95       	ror	r25
 348:	87 95       	ror	r24
 34a:	08 95       	ret

0000034c <__fixunssfsi>:
 34c:	0e 94 05 02 	call	0x40a	; 0x40a <__fp_splitA>
 350:	88 f0       	brcs	.+34     	; 0x374 <__fixunssfsi+0x28>
 352:	9f 57       	subi	r25, 0x7F	; 127
 354:	98 f0       	brcs	.+38     	; 0x37c <__fixunssfsi+0x30>
 356:	b9 2f       	mov	r27, r25
 358:	99 27       	eor	r25, r25
 35a:	b7 51       	subi	r27, 0x17	; 23
 35c:	b0 f0       	brcs	.+44     	; 0x38a <__fixunssfsi+0x3e>
 35e:	e1 f0       	breq	.+56     	; 0x398 <__fixunssfsi+0x4c>
 360:	66 0f       	add	r22, r22
 362:	77 1f       	adc	r23, r23
 364:	88 1f       	adc	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	1a f0       	brmi	.+6      	; 0x370 <__fixunssfsi+0x24>
 36a:	ba 95       	dec	r27
 36c:	c9 f7       	brne	.-14     	; 0x360 <__fixunssfsi+0x14>
 36e:	14 c0       	rjmp	.+40     	; 0x398 <__fixunssfsi+0x4c>
 370:	b1 30       	cpi	r27, 0x01	; 1
 372:	91 f0       	breq	.+36     	; 0x398 <__fixunssfsi+0x4c>
 374:	0e 94 1f 02 	call	0x43e	; 0x43e <__fp_zero>
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	08 95       	ret
 37c:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_zero>
 380:	67 2f       	mov	r22, r23
 382:	78 2f       	mov	r23, r24
 384:	88 27       	eor	r24, r24
 386:	b8 5f       	subi	r27, 0xF8	; 248
 388:	39 f0       	breq	.+14     	; 0x398 <__fixunssfsi+0x4c>
 38a:	b9 3f       	cpi	r27, 0xF9	; 249
 38c:	cc f3       	brlt	.-14     	; 0x380 <__fixunssfsi+0x34>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b3 95       	inc	r27
 396:	d9 f7       	brne	.-10     	; 0x38e <__fixunssfsi+0x42>
 398:	3e f4       	brtc	.+14     	; 0x3a8 <__fixunssfsi+0x5c>
 39a:	90 95       	com	r25
 39c:	80 95       	com	r24
 39e:	70 95       	com	r23
 3a0:	61 95       	neg	r22
 3a2:	7f 4f       	sbci	r23, 0xFF	; 255
 3a4:	8f 4f       	sbci	r24, 0xFF	; 255
 3a6:	9f 4f       	sbci	r25, 0xFF	; 255
 3a8:	08 95       	ret

000003aa <__fp_inf>:
 3aa:	97 f9       	bld	r25, 7
 3ac:	9f 67       	ori	r25, 0x7F	; 127
 3ae:	80 e8       	ldi	r24, 0x80	; 128
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	60 e0       	ldi	r22, 0x00	; 0
 3b4:	08 95       	ret

000003b6 <__fp_nan>:
 3b6:	9f ef       	ldi	r25, 0xFF	; 255
 3b8:	80 ec       	ldi	r24, 0xC0	; 192
 3ba:	08 95       	ret

000003bc <__fp_pscA>:
 3bc:	00 24       	eor	r0, r0
 3be:	0a 94       	dec	r0
 3c0:	16 16       	cp	r1, r22
 3c2:	17 06       	cpc	r1, r23
 3c4:	18 06       	cpc	r1, r24
 3c6:	09 06       	cpc	r0, r25
 3c8:	08 95       	ret

000003ca <__fp_pscB>:
 3ca:	00 24       	eor	r0, r0
 3cc:	0a 94       	dec	r0
 3ce:	12 16       	cp	r1, r18
 3d0:	13 06       	cpc	r1, r19
 3d2:	14 06       	cpc	r1, r20
 3d4:	05 06       	cpc	r0, r21
 3d6:	08 95       	ret

000003d8 <__fp_round>:
 3d8:	09 2e       	mov	r0, r25
 3da:	03 94       	inc	r0
 3dc:	00 0c       	add	r0, r0
 3de:	11 f4       	brne	.+4      	; 0x3e4 <__fp_round+0xc>
 3e0:	88 23       	and	r24, r24
 3e2:	52 f0       	brmi	.+20     	; 0x3f8 <__fp_round+0x20>
 3e4:	bb 0f       	add	r27, r27
 3e6:	40 f4       	brcc	.+16     	; 0x3f8 <__fp_round+0x20>
 3e8:	bf 2b       	or	r27, r31
 3ea:	11 f4       	brne	.+4      	; 0x3f0 <__fp_round+0x18>
 3ec:	60 ff       	sbrs	r22, 0
 3ee:	04 c0       	rjmp	.+8      	; 0x3f8 <__fp_round+0x20>
 3f0:	6f 5f       	subi	r22, 0xFF	; 255
 3f2:	7f 4f       	sbci	r23, 0xFF	; 255
 3f4:	8f 4f       	sbci	r24, 0xFF	; 255
 3f6:	9f 4f       	sbci	r25, 0xFF	; 255
 3f8:	08 95       	ret

000003fa <__fp_split3>:
 3fa:	57 fd       	sbrc	r21, 7
 3fc:	90 58       	subi	r25, 0x80	; 128
 3fe:	44 0f       	add	r20, r20
 400:	55 1f       	adc	r21, r21
 402:	59 f0       	breq	.+22     	; 0x41a <__fp_splitA+0x10>
 404:	5f 3f       	cpi	r21, 0xFF	; 255
 406:	71 f0       	breq	.+28     	; 0x424 <__fp_splitA+0x1a>
 408:	47 95       	ror	r20

0000040a <__fp_splitA>:
 40a:	88 0f       	add	r24, r24
 40c:	97 fb       	bst	r25, 7
 40e:	99 1f       	adc	r25, r25
 410:	61 f0       	breq	.+24     	; 0x42a <__fp_splitA+0x20>
 412:	9f 3f       	cpi	r25, 0xFF	; 255
 414:	79 f0       	breq	.+30     	; 0x434 <__fp_splitA+0x2a>
 416:	87 95       	ror	r24
 418:	08 95       	ret
 41a:	12 16       	cp	r1, r18
 41c:	13 06       	cpc	r1, r19
 41e:	14 06       	cpc	r1, r20
 420:	55 1f       	adc	r21, r21
 422:	f2 cf       	rjmp	.-28     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 424:	46 95       	lsr	r20
 426:	f1 df       	rcall	.-30     	; 0x40a <__fp_splitA>
 428:	08 c0       	rjmp	.+16     	; 0x43a <__fp_splitA+0x30>
 42a:	16 16       	cp	r1, r22
 42c:	17 06       	cpc	r1, r23
 42e:	18 06       	cpc	r1, r24
 430:	99 1f       	adc	r25, r25
 432:	f1 cf       	rjmp	.-30     	; 0x416 <__fp_splitA+0xc>
 434:	86 95       	lsr	r24
 436:	71 05       	cpc	r23, r1
 438:	61 05       	cpc	r22, r1
 43a:	08 94       	sec
 43c:	08 95       	ret

0000043e <__fp_zero>:
 43e:	e8 94       	clt

00000440 <__fp_szero>:
 440:	bb 27       	eor	r27, r27
 442:	66 27       	eor	r22, r22
 444:	77 27       	eor	r23, r23
 446:	cb 01       	movw	r24, r22
 448:	97 f9       	bld	r25, 7
 44a:	08 95       	ret

0000044c <_exit>:
 44c:	f8 94       	cli

0000044e <__stop_program>:
 44e:	ff cf       	rjmp	.-2      	; 0x44e <__stop_program>
